services:
  traefik:
    image: traefik:v3.5
    container_name: physigames-traefik
    env_file:
      - .env
      - .env.local
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/logs:/var/log/traefik
    networks:
      - physigames-network
    restart: unless-stopped

  postgres:
    image: postgres:16.10-alpine
    container_name: physigames-postgres
    env_file:
      - .env
      - .env.local
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_POSTGRES_DB: ${KEYCLOAK_POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-databases.sh:/docker-entrypoint-initdb.d/init-databases.sh
    networks:
      - physigames-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.4
    container_name: physigames-keycloak
    env_file:
      - .env
      - .env.local
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${KEYCLOAK_POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      # Configuration Traefik/Proxy
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:-keycloak.localhost}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_PROXY: edge
      KC_PROXY_ADDRESS_FORWARDING: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_HOSTNAME:-keycloak.localhost}`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      # Headers pour proxy
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Proto=http"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Host=${KEYCLOAK_HOSTNAME:-keycloak.localhost}"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Port=80"
      - "traefik.http.routers.keycloak.middlewares=keycloak-headers"
    command: start-dev --import-realm
    volumes:
      - ./keycloak/realm-export-local.json:/opt/keycloak/data/import/realm-export-local.json
      - ./keycloak/realm-export-dev.json:/opt/keycloak/data/import/realm-export-dev.json
      - ./keycloak/realm-export-prod.json:/opt/keycloak/data/import/realm-export-prod.json
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_started
    networks:
      - physigames-network
    restart: unless-stopped

  physigames-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: physigames-backend
    env_file:
      - .env
      - .env.local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=${APP_CONTAINER_PORT}"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JPA_DDL_AUTO: ${JPA_DDL_AUTO}
      JPA_SHOW_SQL: ${JPA_SHOW_SQL}
      KEYCLOAK_URL: ${KEYCLOAK_URL:-http://keycloak:8080}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-physigames}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
      traefik:
        condition: service_started
    networks:
      - physigames-network
    restart: unless-stopped

networks:
  physigames-network:
    driver: bridge

volumes:
  postgres_data:
