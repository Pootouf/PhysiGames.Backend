services:
  postgres:
    image: postgres:16.10-alpine
    container_name: physigames-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.4
    container_name: physigames-keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
    ports:
      - "${KEYCLOAK_PORT:-8180}:8080"
    command: start-dev --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  physigames-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: physigames-backend
    ports:
      - "${APP_PORT}:${APP_CONTAINER_PORT}"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JPA_DDL_AUTO: ${JPA_DDL_AUTO}
      JPA_SHOW_SQL: ${JPA_SHOW_SQL}
      KEYCLOAK_URL: ${KEYCLOAK_URL:-http://keycloak:8080}
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
