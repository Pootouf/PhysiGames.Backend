services:
  traefik:
    env_file:
      - .env.prod
    ports:
      - "80:80"
      - "443:443"
      # Dashboard désactivé en production (pas de port 8080)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.prod.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/logs:/var/log/traefik
      - ./traefik/acme:/etc/traefik/acme  # Certificats SSL Let's Encrypt
    networks:
      - physigames-network
    restart: unless-stopped

  postgres:
    env_file:
      - .env.prod
    # Pas de port exposé à l'extérieur en production
    ports: []
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups  # Pour les sauvegardes
    networks:
      - physigames-network
    restart: unless-stopped

  keycloak:
    env_file:
      - .env.prod
    command: start --optimized
    environment:
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: true
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_PROXY: edge
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_HOSTNAME}`)"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.routers.keycloak.tls.certresolver=production"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Host=${KEYCLOAK_HOSTNAME}"
      - "traefik.http.middlewares.keycloak-headers.headers.customrequestheaders.X-Forwarded-Port=443"
      - "traefik.http.routers.keycloak.middlewares=keycloak-headers"
    networks:
      - physigames-network
    restart: unless-stopped

  physigames-app:
    env_file:
      - .env.prod
    build:
      context: .
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${API_HOSTNAME}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=production"
      - "traefik.http.services.backend.loadbalancer.server.port=${APP_CONTAINER_PORT}"
      # Middlewares de sécurité
      - "traefik.http.middlewares.backend-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.backend-ratelimit.ratelimit.burst=50"
      - "traefik.http.routers.backend.middlewares=backend-ratelimit"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      JPA_SHOW_SQL: false
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_FR_PHYSIGAMES: INFO
    networks:
      - physigames-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_CONTAINER_PORT}/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  physigames-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local